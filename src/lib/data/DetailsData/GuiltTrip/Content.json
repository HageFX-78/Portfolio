{
	"block1": "<b>Contributions :</b><ul> <li>Turn-based dialogue battle system for mobs</li> <li>Dialogue system that takes input from text files with custom markup</li> <li>Modular UI system for collected items that displays on inventory</li> <li>Battle / Exploration UI design and art</li> <li>Few sprite art in tutorial stage</li> </ul><b>Battle Manager Script</b><p>I won't go into too much details on this as it is somewhat of a bad implementation, but the general idea is that it has 3 states, enemy turn, player turn and no battle state. Partial finite state machine is utilized at the start of each turn but the rest is based entirely in this one script as I was unfamiliar with FSM, the FSM was introduced at first by another programmer but he couldn't make the battle system in time for the first prototype so it was handed over.</p>",

	"block2": "<b>Dialogue Manager</b><p>A modular dialogue system that takes input from text files with custom markup, that displays text letter by letter as well as lerp the camera to locations to focus on during conversation.</p>",

	"block3": "<b>The general flow goes like this : </b> <ol> <li>Any actor or object that is interactable would have a script called TriggerDialogue.cs where it can reference a txt file contains the conversation, and locations that it would like to focus on duing conversation.</li> <li>Another script called InteractablePrompt.cs should also be present that instantiates a collider that allows the dialogue script to be triggered if needed.</li> <li>If an interaction is triggered, the TriggerDialigue script would call startConvo() on a global DialogueManager and the conversation will begin, by passing the text file referenced as well as locations to lerp to which is optional.</li> <li>The manager would then split the content of the text file into names, the lines as well as which line to act on a camera lerp scenario.</li> </ol>",

	"block4": "<b>Example text file for mark-up format :</b><p><code>name:</code> is the format for the name to be displayed for the character.<code>:player</code> is the format to set the camera to focus on.</p><p>Example: <code>:puzzleGuy</code> will focus the camera on the puzzle guy on this line. Rest are the dialogue lines itself.</p>"
}
